--- a/net/minecraft/server/TileEntityChest.java
+++ b/net/minecraft/server/TileEntityChest.java
@@ -1,23 +1,62 @@
 package net.minecraft.server;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.entity.CraftHumanEntity;
+import org.bukkit.entity.HumanEntity;
+import java.util.List;
+// CraftBukkit end
+
 public class TileEntityChest extends TileEntityLootable {
 
     private NonNullList<ItemStack> items;
     private final ContainerOpenersCounter g;
     private final ChestLidController h;
 
+    // CraftBukkit start - add fields and methods
+    public List<HumanEntity> transaction = new java.util.ArrayList<HumanEntity>();
+    private int maxStack = MAX_STACK;
+    public boolean opened;
+
+    public List<ItemStack> getContents() {
+        return this.items;
+    }
+
+    public void onOpen(CraftHumanEntity who) {
+        transaction.add(who);
+        if (!transaction.isEmpty()) opened = true;
+    }
+
+    public void onClose(CraftHumanEntity who) {
+        transaction.remove(who);
+        if (transaction.isEmpty()) opened = false;
+    }
+
+    public List<HumanEntity> getViewers() {
+        return transaction;
+    }
+
+    @Override
+    public int getMaxStackSize() {
+        return maxStack;
+    }
+
+    public void setMaxStackSize(int size) {
+        maxStack = size;
+    }
+    // CraftBukkit end
+
     protected TileEntityChest(TileEntityTypes<?> tileentitytypes, BlockPosition blockposition, IBlockData iblockdata) {
         super(tileentitytypes, blockposition, iblockdata);
         this.items = NonNullList.a(27, ItemStack.b);
         this.g = new ContainerOpenersCounter() {
             @Override
             protected void a(World world, BlockPosition blockposition1, IBlockData iblockdata1) {
-                TileEntityChest.b(world, blockposition1, iblockdata1, SoundEffects.CHEST_OPEN);
+                TileEntityChest.b(world, blockposition1, iblockdata1, SoundEffects.CHEST_OPEN, !opened && getViewers().isEmpty());
             }
 
             @Override
             protected void b(World world, BlockPosition blockposition1, IBlockData iblockdata1) {
-                TileEntityChest.b(world, blockposition1, iblockdata1, SoundEffects.CHEST_CLOSE);
+                TileEntityChest.b(world, blockposition1, iblockdata1, SoundEffects.CHEST_CLOSE, opened && getViewers().size() <= 1);
             }
 
             @Override
@@ -77,7 +116,7 @@
         tileentitychest.h.a();
     }
 
-    private static void b(World world, BlockPosition blockposition, IBlockData iblockdata, SoundEffect soundeffect) {
+    private static void b(World world, BlockPosition blockposition, IBlockData iblockdata, SoundEffect soundeffect, boolean playSound) { // CraftBukkit
         BlockPropertyChestType blockpropertychesttype = (BlockPropertyChestType) iblockdata.get(BlockChest.c);
 
         if (blockpropertychesttype != BlockPropertyChestType.LEFT) {
@@ -92,10 +131,19 @@
                 d2 += (double) enumdirection.getAdjacentZ() * 0.5D;
             }
 
-            world.playSound((EntityHuman) null, d0, d1, d2, soundeffect, SoundCategory.BLOCKS, 0.5F, world.random.nextFloat() * 0.1F + 0.9F);
+            if (playSound) world.playSound((EntityHuman) null, d0, d1, d2, soundeffect, SoundCategory.BLOCKS, 0.5F, world.random.nextFloat() * 0.1F + 0.9F);
         }
     }
 
+    // CraftBukkit start
+    public void playOpenSound(SoundEffect soundeffect) {
+        double d0 = (double) position.getX() + 0.5D;
+        double d1 = (double) position.getY() + 0.5D;
+        double d2 = (double) position.getZ() + 0.5D;
+        world.playSound((EntityHuman) null, d0, d1, d2, soundeffect, SoundCategory.BLOCKS, 0.5F, world.random.nextFloat() * 0.1F + 0.9F);
+    }
+    // CraftBukkit end
+
     @Override
     public boolean setProperty(int i, int j) {
         if (i == 1) {
@@ -109,7 +157,20 @@
     @Override
     public void startOpen(EntityHuman entityhuman) {
         if (!entityhuman.isSpectator()) {
+            int oldPower = Math.max(0, Math.min(15, this.getViewers().size())); // CraftBukkit - Get power before new viewer is added
             this.g.c(this.getWorld(), this.getPosition(), this.getBlock());
+            onOpen(entityhuman.getBukkitEntity());
+            if (this.world == null) return; // CraftBukkit
+
+            // CraftBukkit start - Call redstone event
+            if (this.getBlock().getBlock() == Blocks.TRAPPED_CHEST) {
+                int newPower = Math.max(0, Math.min(15, this.getViewers().size()));
+
+                if (oldPower != newPower) {
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callRedstoneChange(world, position, oldPower, newPower);
+                }
+            }
+            // CraftBukkit end
         }
 
     }
@@ -117,7 +178,18 @@
     @Override
     public void closeContainer(EntityHuman entityhuman) {
         if (!entityhuman.isSpectator()) {
+            int oldPower = Math.max(0, Math.min(15, this.getViewers().size())); // CraftBukkit - Get power before new viewer is added
             this.g.d(this.getWorld(), this.getPosition(), this.getBlock());
+            onClose(entityhuman.getBukkitEntity());
+            // CraftBukkit start - Call redstone event
+            if (this.getBlock().getBlock() == Blocks.TRAPPED_CHEST) {
+                int newPower = Math.max(0, Math.min(15, this.getViewers().size()));
+
+                if (oldPower != newPower) {
+                    org.bukkit.craftbukkit.event.CraftEventFactory.callRedstoneChange(world, position, oldPower, newPower);
+                }
+            }
+            // CraftBukkit end
         }
 
     }
@@ -165,6 +237,13 @@
     protected void a(World world, BlockPosition blockposition, IBlockData iblockdata, int i, int j) {
         Block block = iblockdata.getBlock();
 
-        world.playBlockAction(blockposition, block, 1, j);
+        if (!opened) world.playBlockAction(blockposition, block, 1, j);
+    }
+
+    // CraftBukkit start
+    @Override
+    public boolean isFilteredNBT() {
+        return true;
     }
+    // CraftBukkit end
 }
