--- a/net/minecraft/server/EntityWither.java
+++ b/net/minecraft/server/EntityWither.java
@@ -6,6 +6,13 @@
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityRegainHealthEvent;
+import org.bukkit.event.entity.EntityTargetEvent;
+import org.bukkit.event.entity.ExplosionPrimeEvent;
+// CraftBukkit end
+
 public class EntityWither extends EntityMonster implements IRangedEntity {
 
     private static final DataWatcherObject<Integer> b = DataWatcher.a(EntityWither.class, DataWatcherRegistry.b);
@@ -189,16 +196,40 @@
             this.bossBattle.setProgress(1.0F - (float) i / 220.0F);
             if (i <= 0) {
                 Explosion.Effect explosion_effect = this.world.getGameRules().getBoolean(GameRules.MOB_GRIEFING) ? Explosion.Effect.DESTROY : Explosion.Effect.NONE;
+                // CraftBukkit start
+                // this.world.createExplosion(this, this.locX(), this.getHeadY(), this.locZ(), 7.0F, false, explosion_effect);
+                ExplosionPrimeEvent event = new ExplosionPrimeEvent(this.getBukkitEntity(), 7.0F, false);
+                this.world.getServer().getPluginManager().callEvent(event);
+
+                if (!event.isCancelled()) {
+                    this.world.createExplosion(this, this.locX(), this.getHeadY(), this.locZ(), event.getRadius(), event.getFire(), explosion_effect);
+                }
+                // CraftBukkit end
 
-                this.world.createExplosion(this, this.locX(), this.getHeadY(), this.locZ(), 7.0F, false, explosion_effect);
                 if (!this.isSilent()) {
-                    this.world.b(1023, this.getChunkCoordinates(), 0);
+                    // CraftBukkit start - Use relative location for far away sounds
+                    // this.world.b(1023, new BlockPosition(this), 0);
+                    int viewDistance = ((WorldServer) this.world).getServer().getViewDistance() * 16;
+                    for (EntityPlayer player : (List<EntityPlayer>) MinecraftServer.getServer().getPlayerList().players) {
+                        double deltaX = this.locX() - player.locX();
+                        double deltaZ = this.locZ() - player.locZ();
+                        double distanceSquared = deltaX * deltaX + deltaZ * deltaZ;
+                        if (distanceSquared > viewDistance * viewDistance) {
+                            double deltaLength = Math.sqrt(distanceSquared);
+                            double relativeX = player.locX() + (deltaX / deltaLength) * viewDistance;
+                            double relativeZ = player.locZ() + (deltaZ / deltaLength) * viewDistance;
+                            player.playerConnection.sendPacket(new PacketPlayOutWorldEvent(1023, new BlockPosition((int) relativeX, (int) this.locY(), (int) relativeZ), 0, true));
+                        } else {
+                            player.playerConnection.sendPacket(new PacketPlayOutWorldEvent(1023, this.getChunkCoordinates(), 0, true));
+                        }
+                    }
+                    // CraftBukkit end
                 }
             }
 
             this.setInvul(i);
             if (this.ticksLived % 10 == 0) {
-                this.heal(10.0F);
+                this.heal(10.0F, EntityRegainHealthEvent.RegainReason.WITHER_SPAWN); // CraftBukkit
             }
 
         } else {
@@ -250,9 +281,11 @@
                             if (entityliving != this && entityliving.isAlive() && this.hasLineOfSight(entityliving)) {
                                 if (entityliving instanceof EntityHuman) {
                                     if (!((EntityHuman) entityliving).eU().isInvulnerable) {
+                                        if (CraftEventFactory.callEntityTargetLivingEvent(this, entityliving, EntityTargetEvent.TargetReason.CLOSEST_PLAYER).isCancelled()) continue; // CraftBukkit
                                         this.setHeadTarget(i, entityliving.getId());
                                     }
                                 } else {
+                                    if (CraftEventFactory.callEntityTargetLivingEvent(this, entityliving, EntityTargetEvent.TargetReason.CLOSEST_ENTITY).isCancelled()) continue; // CraftBukkit
                                     this.setHeadTarget(i, entityliving.getId());
                                 }
                                 break;
@@ -288,6 +321,11 @@
                                 IBlockData iblockdata = this.world.getType(blockposition);
 
                                 if (c(iblockdata)) {
+                                    // CraftBukkit start
+                                    if (CraftEventFactory.callEntityChangeBlockEvent(this, blockposition, Blocks.AIR.getBlockData()).isCancelled()) {
+                                        continue;
+                                    }
+                                    // CraftBukkit end
                                     flag = this.world.a(blockposition, true, this) || flag;
                                 }
                             }
@@ -301,7 +339,7 @@
             }
 
             if (this.ticksLived % 20 == 0) {
-                this.heal(1.0F);
+                this.heal(1.0F, EntityRegainHealthEvent.RegainReason.REGEN); // CraftBukkit
             }
 
             this.bossBattle.setProgress(this.getHealth() / this.getMaxHealth());
