--- a/net/minecraft/server/DedicatedServerProperties.java
+++ b/net/minecraft/server/DedicatedServerProperties.java
@@ -2,9 +2,11 @@
 
 import java.util.Properties;
 import java.util.concurrent.TimeUnit;
+import joptsimple.OptionSet; // CraftBukkit
 
 public class DedicatedServerProperties extends PropertyManager<DedicatedServerProperties> {
 
+    public final boolean debug = this.getBoolean("debug", false); // CraftBukkit
     public final boolean onlineMode = this.getBoolean("online-mode", true);
     public final boolean preventProxyConnections = this.getBoolean("prevent-proxy-connections", false);
     public final String serverIp = this.getString("server-ip", "");
@@ -56,10 +58,12 @@
     public final PropertyManager<DedicatedServerProperties>.EditableProperty<Boolean> whiteList;
     public final GeneratorSettings generatorSettings;
 
-    public DedicatedServerProperties(Properties properties, IRegistryCustom iregistrycustom) {
-        super(properties);
+    // CraftBukkit start
+    public DedicatedServerProperties(Properties properties, IRegistryCustom iregistrycustom, OptionSet optionset) {
+        super(properties, optionset);
+        // CraftBukkit end
         this.difficulty = (EnumDifficulty) this.a("difficulty", a(EnumDifficulty::getById, EnumDifficulty::a), EnumDifficulty::c, EnumDifficulty.EASY);
-        this.gamemode = (EnumGamemode) this.a("gamemode", a(EnumGamemode::getById, EnumGamemode::a), EnumGamemode::b, EnumGamemode.NOT_SET);
+        this.gamemode = (EnumGamemode) this.a("gamemode", a(EnumGamemode::getById, EnumGamemode::a), EnumGamemode::b, EnumGamemode.SURVIVAL);
         this.levelName = this.getString("level-name", "world");
         this.serverPort = this.getInt("server-port", 25565);
         this.maxBuildHeight = this.a("max-build-height", (integer) -> {
@@ -108,12 +112,14 @@
         this.generatorSettings = GeneratorSettings.a(iregistrycustom, properties);
     }
 
-    public static DedicatedServerProperties load(IRegistryCustom iregistrycustom, java.nio.file.Path java_nio_file_path) {
-        return new DedicatedServerProperties(loadPropertiesFile(java_nio_file_path), iregistrycustom);
+    // CraftBukkit start
+    public static DedicatedServerProperties load(IRegistryCustom iregistrycustom, java.nio.file.Path java_nio_file_path, OptionSet optionset) {
+        return new DedicatedServerProperties(loadPropertiesFile(java_nio_file_path), iregistrycustom, optionset);
     }
 
     @Override
-    protected DedicatedServerProperties reload(IRegistryCustom iregistrycustom, Properties properties) {
-        return new DedicatedServerProperties(properties, iregistrycustom);
+    protected DedicatedServerProperties reload(IRegistryCustom iregistrycustom, Properties properties, OptionSet optionset) {
+        return new DedicatedServerProperties(properties, iregistrycustom, optionset);
+        // CraftBukkit end
     }
 }
